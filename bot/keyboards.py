from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton


def get_role_selection_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üë§ –ü—Ä–æ–¥–∞–∂–Ω–∏–∫", callback_data="role_seller")],
        [InlineKeyboardButton(text="üßë‚Äçüíº –ó–∞–∫—É–ø—â–∏–∫", callback_data="role_buyer")]
    ])


def get_main_menu_seller(has_active_subscription: bool = False) -> ReplyKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –ø—Ä–æ–¥–∞–∂–Ω–∏–∫–∞"""
    keyboard = [
        [KeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –±–ª–æ–≥–µ—Ä–∞")],
        [KeyboardButton(text="üìù –ú–æ–∏ –±–ª–æ–≥–µ—Ä—ã"), KeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")]
    ]
    
    # –ï—Å–ª–∏ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    if has_active_subscription:
        keyboard.append([KeyboardButton(text="üí≥ –ü–æ–¥–ø–∏—Å–∫–∞"), KeyboardButton(text="üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π")])
    else:
        keyboard.append([KeyboardButton(text="üí≥ –ü–æ–¥–ø–∏—Å–∫–∞")])
    
    keyboard.append([KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")])
    
    return ReplyKeyboardMarkup(
        keyboard=keyboard,
        resize_keyboard=True,
        persistent=True
    )


def get_main_menu_buyer(has_active_subscription: bool = False) -> ReplyKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –∑–∞–∫—É–ø—â–∏–∫–∞"""
    keyboard = [
        [KeyboardButton(text="üîç –ü–æ–∏—Å–∫ –±–ª–æ–≥–µ—Ä–æ–≤")],
        [KeyboardButton(text="üìã –ò—Å—Ç–æ—Ä–∏—è –ø–æ–∏—Å–∫–∞"), KeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")]
    ]
    
    # –ï—Å–ª–∏ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    if has_active_subscription:
        keyboard.append([KeyboardButton(text="üí≥ –ü–æ–¥–ø–∏—Å–∫–∞"), KeyboardButton(text="üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π")])
    else:
        keyboard.append([KeyboardButton(text="üí≥ –ü–æ–¥–ø–∏—Å–∫–∞")])
    
    keyboard.append([KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")])
    
    return ReplyKeyboardMarkup(
        keyboard=keyboard,
        resize_keyboard=True,
        persistent=True
    )


def get_subscription_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥–ø–∏—Å–∫–∏"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üí≥ 1 –º–µ—Å—è—Ü - 500‚ÇΩ", callback_data="pay_monthly")],
        [InlineKeyboardButton(text="üíé 3 –º–µ—Å—è—Ü–∞ - 1350‚ÇΩ (-10%)", callback_data="pay_quarterly")],
        [InlineKeyboardButton(text="üëë 12 –º–µ—Å—è—Ü–µ–≤ - 5000‚ÇΩ (-17%)", callback_data="pay_yearly")],
        [InlineKeyboardButton(text="‚ÑπÔ∏è –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –ø–æ–¥–ø–∏—Å–∫–µ", callback_data="subscription_info")]
    ])


def get_payment_confirmation_keyboard(payment_data: dict) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞"""
    keyboard = []
    
    # –ï—Å–ª–∏ —ç—Ç–æ mock-–ø–ª–∞—Ç–µ–∂, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∏–º–∏—Ç–∞—Ü–∏–∏ –æ–ø–ª–∞—Ç—ã
    if payment_data.get('is_mock'):
        keyboard.append([InlineKeyboardButton(
            text="‚úÖ –ò–º–∏—Ç–∏—Ä–æ–≤–∞—Ç—å —É—Å–ø–µ—à–Ω—É—é –æ–ø–ª–∞—Ç—É", 
            callback_data=f"mock_payment_success_{payment_data['invoice_id']}"
        )])
        keyboard.append([InlineKeyboardButton(
            text="‚ùå –ò–º–∏—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–µ—É–¥–∞—á–Ω—É—é –æ–ø–ª–∞—Ç—É", 
            callback_data=f"mock_payment_failure_{payment_data['invoice_id']}"
        )])
    else:
        # –î–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π - —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É
        keyboard.append([InlineKeyboardButton(
            text="üí≥ –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ", 
            url=payment_data['payment_url']
        )])
        keyboard.append([InlineKeyboardButton(
            text="üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å", 
            callback_data=f"check_payment_{payment_data['invoice_id']}"
        )])
    
    keyboard.append([InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_payment")])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_blogger_list_keyboard(bloggers, page=0) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–ø–∏—Å–∫–∞ –±–ª–æ–≥–µ—Ä–æ–≤"""
    keyboard = []
    
    start = page * 5
    end = start + 5
    
    for i, blogger in enumerate(bloggers[start:end], start):
        keyboard.append([
            InlineKeyboardButton(
                text=f"{blogger.name} ({blogger.platform})",
                callback_data=f"blogger_{blogger.id}"
            )
        ])
    
    # –ù–∞–≤–∏–≥–∞—Ü–∏—è
    nav_row = []
    if page > 0:
        nav_row.append(InlineKeyboardButton(text="‚¨ÖÔ∏è", callback_data=f"bloggers_page_{page-1}"))
    if end < len(bloggers):
        nav_row.append(InlineKeyboardButton(text="‚û°Ô∏è", callback_data=f"bloggers_page_{page+1}"))
    
    if nav_row:
        keyboard.append(nav_row)
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_blogger_details_keyboard(blogger_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–µ—Ç–∞–ª–µ–π –±–ª–æ–≥–µ—Ä–∞"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"edit_blogger_{blogger_id}")],
        [InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_blogger_{blogger_id}")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É", callback_data="back_to_bloggers")]
    ])


def get_search_results_keyboard(results, page=0) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞"""
    keyboard = []
    
    for i, (blogger, seller) in enumerate(results):
        keyboard.append([
            InlineKeyboardButton(
                text=f"{blogger.name} - {blogger.category}",
                callback_data=f"select_blogger_{blogger.id}"
            )
        ])
    
    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    nav_row = []
    if page > 0:
        nav_row.append(InlineKeyboardButton(text="‚¨ÖÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∏–µ", callback_data=f"search_page_{page-1}"))
    
    nav_row.append(InlineKeyboardButton(text="üîÑ –ü–æ–∫–∞–∑–∞—Ç—å –µ—â–µ", callback_data=f"search_page_{page+1}"))
    
    if nav_row:
        keyboard.append(nav_row)
    
    keyboard.append([InlineKeyboardButton(text="üîç –ù–æ–≤—ã–π –ø–æ–∏—Å–∫", callback_data="new_search")])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_blogger_selection_keyboard(blogger_id: int, seller_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –±–ª–æ–≥–µ—Ä–∞"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìû –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã", callback_data=f"get_contacts_{blogger_id}_{seller_id}")],
        [InlineKeyboardButton(text="‚≠ê –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤", callback_data=f"review_{seller_id}")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º", callback_data="back_to_results")]
    ])


def get_yes_no_keyboard(action: str) -> InlineKeyboardMarkup:
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –î–∞/–ù–µ—Ç"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚úÖ –î–∞", callback_data=f"yes_{action}"),
            InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data=f"no_{action}")
        ]
    ])


def get_platform_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üì∫ YouTube", callback_data="platform_youtube")],
        [InlineKeyboardButton(text="üì∏ Instagram", callback_data="platform_instagram")],
        [InlineKeyboardButton(text="üéµ TikTok", callback_data="platform_tiktok")],
        [InlineKeyboardButton(text="üì± Telegram", callback_data="platform_telegram")],
        [InlineKeyboardButton(text="üåê –î—Ä—É–≥–æ–µ", callback_data="platform_other")]
    ])


def get_category_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üè• –ú–µ–¥–∏—Ü–∏–Ω–∞", callback_data="category_–º–µ–¥–∏—Ü–∏–Ω–∞")],
        [InlineKeyboardButton(text="üíï –û—Ç–Ω–æ—à–µ–Ω–∏—è", callback_data="category_–æ—Ç–Ω–æ—à–µ–Ω–∏—è")],
        [InlineKeyboardButton(text="üë∂ –î–µ—Ç–∏", callback_data="category_–¥–µ—Ç–∏")],
        [InlineKeyboardButton(text="üè† –î–æ–º –∏ –±—ã—Ç", callback_data="category_–¥–æ–º")],
        [InlineKeyboardButton(text="üíÑ –ö—Ä–∞—Å–æ—Ç–∞", callback_data="category_–∫—Ä–∞—Å–æ—Ç–∞")],
        [InlineKeyboardButton(text="üç≥ –ö—É–ª–∏–Ω–∞—Ä–∏—è", callback_data="category_–∫—É–ª–∏–Ω–∞—Ä–∏—è")],
        [InlineKeyboardButton(text="üéÆ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", callback_data="category_—Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è")],
        [InlineKeyboardButton(text="üìö –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ", callback_data="category_–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ")],
        [InlineKeyboardButton(text="üíº –ë–∏–∑–Ω–µ—Å", callback_data="category_–±–∏–∑–Ω–µ—Å")],
        [InlineKeyboardButton(text="üåê –î—Ä—É–≥–æ–µ", callback_data="category_other")]
    ])


def get_rating_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ü–µ–Ω–∫–∏"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="1‚≠ê", callback_data="rating_1"),
            InlineKeyboardButton(text="2‚≠ê", callback_data="rating_2"),
            InlineKeyboardButton(text="3‚≠ê", callback_data="rating_3"),
            InlineKeyboardButton(text="4‚≠ê", callback_data="rating_4"),
            InlineKeyboardButton(text="5‚≠ê", callback_data="rating_5")
        ]
    ])


def get_subscription_management_keyboard(auto_renewal: bool = True) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–æ–π"""
    keyboard = []
    
    if auto_renewal:
        keyboard.append([InlineKeyboardButton(
            text="üîÑ –û—Ç–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ", 
            callback_data="disable_auto_renewal"
        )])
    else:
        keyboard.append([InlineKeyboardButton(
            text="üîÑ –í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ", 
            callback_data="enable_auto_renewal"
        )])
    
    keyboard.extend([
        [InlineKeyboardButton(
            text="‚è∏Ô∏è –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è", 
            callback_data="suspend_subscription"
        )],
        [InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –ø–æ–ª–Ω–æ—Å—Ç—å—é", 
            callback_data="cancel_subscription_full"
        )],
        [InlineKeyboardButton(
            text="üìä –ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π", 
            callback_data="payment_history"
        )],
        [InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", 
            callback_data="back_to_main"
        )]
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_subscription_cancel_confirmation_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–º–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text="‚úÖ –î–∞, –æ—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", 
            callback_data="confirm_cancel_subscription"
        )],
        [InlineKeyboardButton(
            text="‚ùå –ù–µ—Ç, –æ—Å—Ç–∞–≤–∏—Ç—å –∫–∞–∫ –µ—Å—Ç—å", 
            callback_data="cancel_subscription_cancel"
        )]
    ])


def get_settings_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîÑ –°–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å", callback_data="change_role")],
        [InlineKeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="profile")],
        [InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="statistics")],
        [InlineKeyboardButton(text="‚ùì –ü–æ–º–æ—â—å", callback_data="help")]
    ]) 